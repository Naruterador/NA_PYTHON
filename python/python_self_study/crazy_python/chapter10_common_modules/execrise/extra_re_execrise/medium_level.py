import re

'''
1、长度为8-10的用户密码（以字母开头、数字、下划线）
2、验证输入只能是汉字 ：
3、电子邮箱验证：
4、URL地址验证：
5、电话号码的验证：
6、简单的身份证号验证：
'''


#1、长度为8-10的用户密码（以字母开头、数字、下划线）
p1 = re.compile(r'^[a-z]\w{7,9}$',re.I)


#2、验证输入只能是汉字:
p2 = re.compile(r'^[\u4e00-\u9fa5]{0,}$')
'''
\u4e00-\u9fa5”是unicode编码，一种全世界语言都包括的一种编码。（国际化功能中常常用到），\u4e00-\u9fa5是用来判断是不是中文的一个条件。
'''

#3.电子邮箱账号验证
p3 = re.compile(r'^(\w+)@(\w+)\.(?-i:[a-z]+)(\.([a-z]+))?',re.I)


#4.URL地址验证(下面的正则再添加了%和&号之后无法运行，python内部bug,版本为Python 3.7.6)
#p4 = re.compile(r'^(http://|https://)(\w+).(\w+)([.\w/=?-\&\%])?*')
#p4 = re.compile(r'^(http://|https://)([\w-]+\.)+[\w-]+(/[\w-./?%&=]*)?$')


#5.电话号码验证:
#> 3位区号的电话号码
p5 = re.compile(r'^0\d{2}-\d{7}')

#> 4位区号的电话号码
p6 = re.compile(r'^0\d{3}-\d{7}')

#> 同时匹配2中区号的电话号码
p7 = re.compile(r'^0(\d{2}|\d{3})-\d{7}')


#身份证号码
p8 = re.compile(r'^[1-9]\d{17}')


output = p8.search(r'111111111111111111')
print(output)

